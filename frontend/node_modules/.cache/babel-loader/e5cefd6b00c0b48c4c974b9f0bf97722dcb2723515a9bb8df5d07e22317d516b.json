{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandardrakaliyski/Documents/Projects/django-react-notes-app/frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\n// import React, {useState, useEffect} from 'react'\n// import { useParams } from 'react-router-dom';\n\n// const NotePage = () => {\n//     let id  = useParams() // noteId\n//     let [note, setNote] = useState(null)\n\n//     useEffect(()=>{\n//         getNote()\n//     }, [id])\n\n//     let getNote = async ()=>{\n//         let response = await fetch(`api/notes/${id}/`)\n//         let data = await response.json()\n//         setNote(data)\n//     }\n\n//   return (\n//     <div>\n//         <p>{note?.body}</p>\n//     </div>\n//   )\n// }\n\n// export default NotePage\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  let {\n    id\n  } = useParams(); // noteId\n  let [note, setNote] = useState(null);\n  const navigate = useNavigate();\n\n  // let updateNote = async () => {\n  //   fetch(`/api/notes/${id}/update/`, {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(note)\n  //   })\n  // }\n\n  const updateNote = async () => {\n    try {\n      await fetch(`/api/notes/${id}/update/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(note)\n      });\n    } catch (error) {\n      console.error(\"Error updating note:\", error);\n    }\n  };\n  let handleSubmit = () => {\n    updateNote();\n    navigate('/');\n  };\n  useEffect(() => {\n    const getNote = async () => {\n      let response = await fetch(`/api/notes/${id}`);\n      let data = await response.json();\n      setNote(data);\n    };\n    getNote();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"pd62vjTISEG0s79mb5ZFdlx/TjE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","_s","id","note","setNote","navigate","updateNote","fetch","method","headers","body","JSON","stringify","error","console","handleSubmit","getNote","response","data","json","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["/Users/aleksandardrakaliyski/Documents/Projects/django-react-notes-app/frontend/src/pages/NotePage.js"],"sourcesContent":["// import React, {useState, useEffect} from 'react'\n// import { useParams } from 'react-router-dom';\n\n// const NotePage = () => {\n//     let id  = useParams() // noteId\n//     let [note, setNote] = useState(null)\n    \n//     useEffect(()=>{\n//         getNote()\n//     }, [id])\n\n//     let getNote = async ()=>{\n//         let response = await fetch(`api/notes/${id}/`)\n//         let data = await response.json()\n//         setNote(data)\n//     }\n\n\n//   return (\n//     <div>\n//         <p>{note?.body}</p>\n//     </div>\n//   )\n// }\n\n// export default NotePage\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\n\nconst NotePage = () => {\n  let {id} = useParams(); // noteId\n  let [note, setNote] = useState(null);\n  const navigate = useNavigate();\n\n  \n  // let updateNote = async () => {\n  //   fetch(`/api/notes/${id}/update/`, {\n  //     method: \"PUT\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //     body: JSON.stringify(note)\n  //   })\n  // }\n\n  const updateNote = async () => {\n    try {\n      await fetch(`/api/notes/${id}/update/`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(note),\n      });\n    } catch (error) {\n      console.error(\"Error updating note:\", error);\n    }\n  };\n  \n  let handleSubmit = ()=> {\n    updateNote()\n    navigate('/')\n  }\n  \n  useEffect(() => {\n    const getNote = async () => {\n      let response = await fetch(`/api/notes/${id}`);\n      let data = await response.json();\n      setNote(data);\n    };\n    getNote();\n  }, [id]);\n\n  return (\n    <div className='note'>\n      <div className=\"note-header\">\n        <h3>\n          < ArrowLeft onClick={handleSubmit()}/>\n        </h3>\n      </div>\n      <textarea onChange={(e) =>{setNote({...note, 'body':e.target.value })}} defaultValue={note?.body}></textarea>\n    </div>\n  );\n};\n\nexport default NotePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}