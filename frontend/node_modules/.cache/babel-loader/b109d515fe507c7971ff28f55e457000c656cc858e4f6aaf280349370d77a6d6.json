{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandardrakaliyski/Documents/Projects/django-react-notes-app/frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  let {\n    id\n  } = useParams(); // noteId\n  let [note, setNote] = useState(null);\n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let createNote = async () => {\n    fetch(`/api/notes/create/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(note)\n    });\n  };\n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n  let handleSubmit = () => {\n    console.log('NOTE: ', note);\n    if (id !== 'new' && note.body === '') {\n      deleteNote();\n    } else if (id !== 'new') {\n      updateNote();\n    } else if (id === 'new' && note.body !== null) {\n      createNote();\n    }\n  };\n  useEffect(() => {\n    const getNote = async () => {\n      if (id === 'new') return;\n      let response = await fetch(`/api/notes/${id}`);\n      let data = await response.json();\n      setNote(data);\n    };\n    getNote();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: '/',\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n            onClick: handleSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: '/',\n        children: id !== 'new' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: deleteNote,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNote({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"BjxJt4Rw+2TOOXM/EQgpMLIU3fw=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","ReactComponent","ArrowLeft","jsxDEV","_jsxDEV","NotePage","_s","id","note","setNote","updateNote","fetch","method","headers","body","JSON","stringify","createNote","deleteNote","handleSubmit","console","log","getNote","response","data","json","className","children","to","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["/Users/aleksandardrakaliyski/Documents/Projects/django-react-notes-app/frontend/src/pages/NotePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\n\nconst NotePage = () => {\n  let {id} = useParams(); // noteId\n  let [note, setNote] = useState(null);\n\n  \n  let updateNote = async () => {\n    fetch(`/api/notes/${id}/update/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(note)\n    })\n  }\n\n  let createNote = async () => {\n    fetch(`/api/notes/create/`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(note)\n    })\n  }\n  \n  let deleteNote = async () => {\n    fetch(`/api/notes/${id}/delete/`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    })\n  }\n  \n  let handleSubmit = ()=> {\n    console.log('NOTE: ', note);\n    if (id !== 'new' && note.body==='') {\n      deleteNote()\n    } else if (id !== 'new') {\n      updateNote()\n    } else if (id==='new' && note.body !==null) {\n      createNote()\n    }\n  }\n  \n  useEffect(() => {\n    const getNote = async () => {\n      if (id==='new') return\n      let response = await fetch(`/api/notes/${id}`);\n      let data = await response.json();\n      setNote(data);\n    };\n    getNote();\n  }, [id]);\n\n  return (\n    <div className='note'>\n      <div className=\"note-header\">\n        <h3>\n          <Link to={'/'}>\n            < ArrowLeft onClick={handleSubmit}/>\n          </Link>\n        </h3>\n        <Link to={'/'}> \n          {id !== 'new' ? (\n            <button onClick={deleteNote}>Delete</button>\n          ): (\n            <button onClick={handleSubmit}>Done</button>\n          )}\n        </Link>\n      </div>\n      <textarea onChange={(e) =>{setNote({...note, 'body':e.target.value })}} defaultValue={note?.body}></textarea>\n    </div>\n  );\n};\n\nexport default NotePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}