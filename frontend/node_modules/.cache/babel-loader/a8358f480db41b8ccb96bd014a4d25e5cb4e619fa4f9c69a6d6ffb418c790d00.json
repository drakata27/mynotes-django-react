{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandardrakaliyski/Documents/Projects/django-react-notes-app/frontend/src/pages/NotePage.js\",\n  _s = $RefreshSig$();\n// import React, {useState, useEffect} from 'react'\n// import { useParams } from 'react-router-dom';\n\n// const NotePage = () => {\n//     let id  = useParams() // noteId\n//     let [note, setNote] = useState(null)\n\n//     useEffect(()=>{\n//         getNote()\n//     }, [id])\n\n//     let getNote = async ()=>{\n//         let response = await fetch(`api/notes/${id}/`)\n//         let data = await response.json()\n//         setNote(data)\n//     }\n\n//   return (\n//     <div>\n//         <p>{note?.body}</p>\n//     </div>\n//   )\n// }\n\n// export default NotePage\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport second from 'first';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = () => {\n  _s();\n  let {\n    id\n  } = useParams(); // noteId\n  let [note, setNote] = useState(null);\n  useEffect(() => {\n    const getNote = async () => {\n      let response = await fetch(`/api/notes/${id}`);\n      let data = await response.json();\n      setNote(data);\n    };\n    getNote();\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"BjxJt4Rw+2TOOXM/EQgpMLIU3fw=\", false, function () {\n  return [useParams];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","ReactComponent","ArrowLeft","second","jsxDEV","_jsxDEV","NotePage","_s","id","note","setNote","getNote","response","fetch","data","json","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","body","_c","$RefreshReg$"],"sources":["/Users/aleksandardrakaliyski/Documents/Projects/django-react-notes-app/frontend/src/pages/NotePage.js"],"sourcesContent":["// import React, {useState, useEffect} from 'react'\n// import { useParams } from 'react-router-dom';\n\n// const NotePage = () => {\n//     let id  = useParams() // noteId\n//     let [note, setNote] = useState(null)\n    \n//     useEffect(()=>{\n//         getNote()\n//     }, [id])\n\n//     let getNote = async ()=>{\n//         let response = await fetch(`api/notes/${id}/`)\n//         let data = await response.json()\n//         setNote(data)\n//     }\n\n\n//   return (\n//     <div>\n//         <p>{note?.body}</p>\n//     </div>\n//   )\n// }\n\n// export default NotePage\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\nimport second from 'first'\n\nconst NotePage = () => {\n  let {id} = useParams(); // noteId\n  let [note, setNote] = useState(null);\n\n  useEffect(() => {\n    const getNote = async () => {\n      let response = await fetch(`/api/notes/${id}`);\n      let data = await response.json();\n      setNote(data);\n    };\n\n    getNote();\n  }, [id]);\n\n  return (\n    <div className='note'>\n      <div className=\"note-header\">\n        <h3>\n          <Link to='/'>\n            < ArrowLeft />\n          </Link>\n        </h3>\n      </div>\n      <textarea defaultValue={note?.body}></textarea>\n    </div>\n  );\n};\n\nexport default NotePage;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,cAAc,IAAIC,SAAS,QAAO,0BAA0B;AACrE,OAAOC,MAAM,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,IAAI;IAACC;EAAE,CAAC,GAAGR,SAAS,CAAC,CAAC,CAAC,CAAC;EACxB,IAAI,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaL,EAAG,EAAC,CAAC;MAC9C,IAAIM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAChCL,OAAO,CAACI,IAAI,CAAC;IACf,CAAC;IAEDH,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACH,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAKW,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBZ,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BZ,OAAA;QAAAY,QAAA,eACEZ,OAAA,CAACN,IAAI;UAACmB,EAAE,EAAC,GAAG;UAAAD,QAAA,eACVZ,OAAA,CAAEH,SAAS;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNjB,OAAA;MAAUkB,YAAY,EAAEd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACf,EAAA,CA1BID,QAAQ;EAAA,QACDN,SAAS;AAAA;AAAAyB,EAAA,GADhBnB,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}